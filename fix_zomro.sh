#!/bin/bash
echo "üîß Fix Killer Game sur Zomro"
echo "================================"
echo ""

# Activer l'environnement virtuel
source venv/bin/activate

# √âtape 1: D√©marrer serveur local en mode dev (port 5000)
echo "1Ô∏è‚É£ D√©marrage serveur local..."
export FLASK_APP=server.py
export FLASK_ENV=development
PORT=5000 python server.py > /tmp/killer.log 2>&1 &
SERVER_PID=$!
echo "   Serveur PID: $SERVER_PID"

# Attendre que le serveur soit pr√™t
echo "   Attente du d√©marrage..."
for i in {1..30}; do
    if curl -s http://localhost:5000/health > /dev/null 2>&1; then
        echo "   ‚úì Serveur pr√™t!"
        break
    fi
    sleep 1
done

# √âtape 2: Synchroniser en local
echo ""
echo "2Ô∏è‚É£ Synchronisation locale (t√©l√©chargement depuis Google Sheets)..."
PORT=5000 ./sync.sh admin killer2025

# √âtape 3: Arr√™ter serveur local
echo ""
echo "3Ô∏è‚É£ Arr√™t serveur local..."
kill $SERVER_PID 2>/dev/null
sleep 2

# D√©sactiver venv
deactivate

# V√©rifier que les CSV existent
if [ ! -f "data/players.csv" ]; then
    echo "‚ùå Erreur: CSV non cr√©√©s!"
    echo "Logs du serveur:"
    tail -50 /tmp/killer.log
    exit 1
fi

echo "   ‚úì CSV cr√©√©s ($(wc -l < data/players.csv) lignes)"
echo "   ‚úì Images: $(ls data/images/*.jpg 2>/dev/null | wc -l) fichiers"

# √âtape 4: Upload vers Zomro
echo ""
echo "4Ô∏è‚É£ Upload des donn√©es vers Zomro..."
scp -r data root@188.137.182.53:/var/www/killer/

# √âtape 5: Red√©marrer serveur Zomro
echo ""
echo "5Ô∏è‚É£ Red√©marrage du serveur sur Zomro..."
ssh root@188.137.182.53 'systemctl restart killer'

echo ""
echo "‚úÖ Termin√©!"
echo ""
echo "üåê Teste: http://188.137.182.53:8080"
